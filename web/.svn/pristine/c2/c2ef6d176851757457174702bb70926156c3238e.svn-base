<script>
// @ts-nocheck
    import {onMount} from "svelte";
    import {FontAwesomeIcon} from "@fortawesome/svelte-fontawesome";
    import {faChevronUp, faChevronDown, faXmark} from "@fortawesome/free-solid-svg-icons";
    import { fetchData } from "$lib/api/fetch";
    import {moveRowUp, moveRowDown, moveRowX} from "$lib/common";

    /** @type {import('../../mainMenu/$types').PageData} */
    /**
     * @type {any[]}
     */
    let initialData = [];

    onMount(async () => {
        const data = await fetchData("/api/mainMenuList", '');
        initialData = data;
    });

    function addRow() {
        const newRow = {
            seq:"",
            name: "",
            type: "0",
            title: "",
            url: "",
            sort: "",
            enabled: "true"
        };
        initialData = [
            ...initialData,
            newRow
        ];
    }
   
    function submitForm() {
        const form = document.getElementById('frm');
        if (form instanceof HTMLFormElement) {
            const formDataArray = [];

            // 각 <tr> 요소에 대해 폼 데이터 생성
            const rows = form.querySelectorAll('tbody tr');
            rows.forEach((row) => {
                const inputs = row.querySelectorAll('input, select');
                const formData = {};
                inputs.forEach((input) => {
                    const name = input.getAttribute('name');
                    const value = input.value;
                    formData[name] = value;
                });
                formDataArray.push(formData);
            });

            fetchData("/api/saveMainMenu", formDataArray)
                .then((data) => {
                    window.location.reload();
                })
                .catch((error) => {
                    console.error('Fetch Error:', error);
                });

        } else {
            console.error('Form element not found');
        }
    }

    async function menuDel(i, mainSeq){
        const cnt = await fetchData("/api/getBoardCnt", {mainSeq});
        if(cnt > 0){
            alert('해당 메뉴의 등록된 게시글이 있습니다. \n게시글 삭제 후 이용 가능합니다.');
            return;
        }
        initialData = moveRowX(i, initialData)
    }

</script>

<div class="page_title">
    <h2>대메뉴관리</h2>
</div>
<div class="part">
    <div class="search_top_wrap on_btn">
        <div class="etc_buttons">
            <button on:click={addRow}>메뉴 추가</button>
            <button on:click={addRow}>메뉴 추가</button>
        </div>
    </div>
    <div class="table_srcoll">
        <form id="frm" name="frm">
            <table>
                <caption>게시판관리</caption>
                <thead>
                    <tr>
                        <th>no</th>
                        <th>name</th>
                        <th>title</th>
                        <th>type</th>
                        <th>url</th>
                        <th>enabled</th>
                        <th>관리</th>
                    </tr>
                </thead>
                <tbody>
                    {#each initialData as row, i}
                        <tr id="row-{i}">
                            <input type="hidden" name="seq" bind:value={row.seq} readonly/>
                            <input type="hidden" name="filepath" bind:value={row.filepath} readonly/>
                            <input type="hidden" name="sort" bind:value={i} />
                            <td>{i+1}</td>
                            <td ><input type="text" name="name" bind:value={row.name}/></td >
                            <td >
                                <input type="text" name="title" bind:value={row.title}/>
                            </td >
                            <td>
                                <select name="type">
                                    <option value="0" selected={row.type === 0}>게시판</option>
                                    <option value="1" selected={row.type === 1}>페이지</option>
                                    <option value="2" selected={row.type === 2}>링크</option>
                                </select>
                            </td>
                            <td >
                                <input type="text" name="url" bind:value={row.url}/>
                            </td >
                            <td>
                                <select name="enabled">
                                    <option value="true" selected={row.enabled === 'true'}>true</option>
                                    <option value="false" selected={row.enabled === 'false'}>false</option>
                                </select>
                            </td> 
                            <td>
                                <div class="aa">
                                    <!-- svelte-ignore a11y-click-events-have-key-events FontAwesomeIcon-->
                                    <div on:click={() => initialData = moveRowUp(i, initialData)} class="icon">
                                        <FontAwesomeIcon icon={faChevronUp}/>
                                    </div>
                                    <!-- svelte-ignore a11y-click-events-have-key-events FontAwesomeIcon-->
                                    <div on:click={() => initialData = moveRowDown(i, initialData)} class="icon">
                                        <FontAwesomeIcon icon={faChevronDown}/>
                                    </div>
                                    <!-- svelte-ignore a11y-click-events-have-key-events FontAwesomeIcon-->
                                    <div on:click={() => menuDel(i, row.seq)} class="icon">
                                        <FontAwesomeIcon icon={faXmark}/>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    {/each}
                </tbody>
            </table>
            <button on:click={submitForm}>저장</button>
        </form>
    </div>
</div>

<style >
    .aa {
        display: flex;
    }
    tr:hover {
        background-color: #f4f4f4;
    }
    .icon {
        cursor: pointer;
        margin: 5px;
        flex: 1;
    }
</style>