<!-- 
	+layout.svelte 파일에 ..
	라우터 가드를 적용하면 모든 페이지에서 로그인 체크를 자동으로 수행하게 됩니다. 
	로그인이 필요한 페이지에는 접근하지 못하고 로그인이 필요하지 않은 페이지에는 자유롭게 접근할 수 있습니다. 
-->
<script>
  import "../styles.css";

  import { user, updateUser } from "$lib/stores/user";
  import { onMount, onDestroy } from "svelte";
  import { goto } from "$app/navigation";
  import { page } from "$app/stores";
  import { resetSearchParams  } from "$lib/stores/search";

  let isLoggedIn = false;

  /**
   * onMount 함수는 컴포넌트가 처음으로 마운트될 때 한 번만 실행되는 함수입니다.
   * 페이지가 변경될 때마다 동작하려면 onMount 함수 대신 subscribe 함수를 사용해야 합니다.
   * subscribe 함수는 Svelte의 $page 스토어를 구독하여 페이지 변경을 감지하는데 사용됩니다.
   */
  const unsubscribe = page.subscribe(($page) => {
    var currentUrl = $page.url.pathname;
   // console.log(" subscribe currentUrl :::: " + currentUrl);
    if (typeof localStorage !== "undefined") {
      const storedUser = getUserFromLocalStorage(); // localStorage에서 사용자 정보 가져오기
      //console.log("##localstorage : " + JSON.stringify(storedUser));
      if (storedUser) {
        updateUser(storedUser); // 스토어에 사용자 정보 업데이트
      }
    }

    //게시물관리 > 검색조건 파라미터 지우기
    if(!currentUrl.startsWith("/admin/post")){
      resetSearchParams();
    }
    //  console.log("##store : " + JSON.stringify($user));
  });

  // 컴포넌트가 파괴될 때 구독 해제
  onDestroy(() => {
    unsubscribe();
  });

  function getUserFromLocalStorage() {
    const storedUser = localStorage.getItem("user");
    return storedUser ? JSON.parse(storedUser) : null;
  }

  onMount(() => {
    isLoggedIn = $user.isLoggedIn;
    if (!isLoggedIn) {
      goto("/admin/login");
    }
  });
</script>

<slot />

<style lang="scss">
</style>
